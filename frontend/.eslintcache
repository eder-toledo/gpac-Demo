[{"F:\\retos-entrevistas\\gpac\\frontend\\src\\index.js":"1","F:\\retos-entrevistas\\gpac\\frontend\\src\\reportWebVitals.js":"2","F:\\retos-entrevistas\\gpac\\frontend\\src\\App.js":"3","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\LeftMenu\\index.jsx":"4","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\Footer\\index.jsx":"5","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\SearchBar\\index.jsx":"6","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\ListCandidates\\index.jsx":"7","F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\market\\index.jsx":"8","F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\map\\index.jsx":"9","F:\\retos-entrevistas\\gpac\\frontend\\src\\context\\candidates-context.jsx":"10","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\MapListCandidates\\index.jsx":"11","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\MapCandidates\\index.jsx":"12","F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\new\\index.jsx":"13"},{"size":500,"mtime":1607693083900,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607693083900,"results":"16","hashOfConfig":"15"},{"size":1054,"mtime":1611806683178,"results":"17","hashOfConfig":"15"},{"size":3298,"mtime":1611710731512,"results":"18","hashOfConfig":"15"},{"size":945,"mtime":1611630338451,"results":"19","hashOfConfig":"15"},{"size":1455,"mtime":1611635214538,"results":"20","hashOfConfig":"15"},{"size":2909,"mtime":1611710503990,"results":"21","hashOfConfig":"15"},{"size":856,"mtime":1611635789981,"results":"22","hashOfConfig":"15"},{"size":562,"mtime":1611674501197,"results":"23","hashOfConfig":"15"},{"size":819,"mtime":1611624744952,"results":"24","hashOfConfig":"15"},{"size":2339,"mtime":1611806916075,"results":"25","hashOfConfig":"15"},{"size":1740,"mtime":1611807094952,"results":"26","hashOfConfig":"15"},{"size":9923,"mtime":1611805463842,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"v1bpjc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"F:\\retos-entrevistas\\gpac\\frontend\\src\\index.js",[],["60","61"],"F:\\retos-entrevistas\\gpac\\frontend\\src\\reportWebVitals.js",[],"F:\\retos-entrevistas\\gpac\\frontend\\src\\App.js",["62","63","64"],"F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\LeftMenu\\index.jsx",["65","66"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: \"#1A1C21 0% 0% no-repeat padding-box\",\r\n    opacity: 1,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  text: {\r\n    textAlign: \"left\",\r\n    font: \"normal normal 300 12px/15px Montserrat\",\r\n    letterSpacing: \"0.24px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: 1,\r\n  },\r\n  textClock: {\r\n    textAlign: \"center\",\r\n    font: \"normal normal 300 12px/15px Montserrat\",\r\n    letterSpacing: \"0.24px\",\r\n    color: \"#CECECE\",\r\n    opacity: 1,\r\n  },\r\n  clockHour: {\r\n    textAlign: \"center\",\r\n    font: \"normal normal 300 12px/15px Montserrat\",\r\n    letterSpacing: \"0.24px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: 1,\r\n    font: \"normal normal bold 30px/37px Montserrat\",\r\n  },\r\n  box: {\r\n    background: \"#1A1C21 0% 0% no-repeat padding-box\",\r\n  },\r\n  element: {\r\n    \"&:hover\": {\r\n      background: \"#FF3939\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst menuElements = [\r\n  {\r\n    name: \"Dashboard\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n  {\r\n    name: \"Job Orders\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n  {\r\n    name: \"Market\",\r\n    icon: \"Group 573.svg\",\r\n  },\r\n  {\r\n    name: \"Companies\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n  {\r\n    name: \"S. Projects\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n  {\r\n    name: \"Map\",\r\n    icon: \"Group 575.svg\",\r\n  },\r\n  {\r\n    name: \"Tasks Tool\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n  {\r\n    name: \"Sendouts\",\r\n    icon: \"Group 2.svg\",\r\n  },\r\n];\r\n\r\nexport default function LetfMenu() {\r\n  const classes = useStyles();\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  setInterval(() => {\r\n    setTime(new Date());\r\n  }, 1000);\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className={classes.root}\r\n      >\r\n        {menuElements.map((menuElement) => {\r\n          return (\r\n            <ListItem className={classes.element} button key={menuElement.name}>\r\n              <ListItemIcon>\r\n                <Icon>\r\n                  <img src={\"/assets/\" + menuElement.icon} />\r\n                </Icon>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                className={classes.text}\r\n                primary={menuElement.name}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <Box className={classes.box}>\r\n        <p className={classes.textClock}>\r\n          {time.toLocaleDateString(\"en-us\", { weekday: \"long\" })}\r\n        </p>\r\n        <p className={classes.textClock}>\r\n          {time.toLocaleDateString(\"en-us\", { month: \"short\" })}{\" \"}\r\n          {time.toLocaleDateString(\"en-us\", { day: \"numeric\" })}th\r\n        </p>\r\n        <p className={classes.clockHour}>\r\n          {time.toLocaleTimeString([], { timeStyle: \"short\" })}\r\n        </p>\r\n        <p className={classes.textClock}>Actual time</p>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\Footer\\index.jsx",["67","68","69","70"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: \"#1A1C21 0% 0% no-repeat padding-box\",\r\n    opacity: 1,\r\n  },\r\n  copy: {\r\n    textAlign: \"center\",\r\n    font: \"normal normal 300 14px/18px Montserrat\",\r\n    letterSpacing: \"0.28px\",\r\n    color: \"#CECECE\",\r\n    opacity: 1,\r\n  },\r\n  links: {\r\n    textAlign: \"center\",\r\n    font: \"normal normal 300 14px/18px Montserrat\",\r\n    letterSpacing: \"0.28px\",\r\n    color: \"#C1C1C1\",\r\n    opacity: 1,\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <span className={classes.copy}>GPAC Directory v0.1 - 2019</span>\r\n      <span className={classes.links}>\r\n        <a href=\"\">Help</a> - <a href=\"\">Tutorials</a> - <a href=\"\">Support</a>{\" \"}\r\n        - <a href=\"\">FAQ's</a>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\SearchBar\\index.jsx",[],"F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\ListCandidates\\index.jsx",[],["71","72"],"F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\market\\index.jsx",[],"F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\map\\index.jsx",["73"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box, Checkbox } from \"@material-ui/core\";\r\nimport MapListCandidates from \"../../components/MapListCandidates\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <span>Show only:</span>\r\n        <span>\r\n          <Checkbox /> Alphas\r\n        </span>\r\n        <span>\r\n          <Checkbox /> Job Orders\r\n        </span>\r\n        <span>\r\n          <Checkbox /> Companies\r\n        </span>\r\n      </Box>\r\n      <MapListCandidates />\r\n    </div>\r\n  );\r\n}\r\n","F:\\retos-entrevistas\\gpac\\frontend\\src\\context\\candidates-context.jsx",[],"F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\MapListCandidates\\index.jsx",[],"F:\\retos-entrevistas\\gpac\\frontend\\src\\components\\MapCandidates\\index.jsx",["74","75"],"F:\\retos-entrevistas\\gpac\\frontend\\src\\pages\\new\\index.jsx",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Tabs, Tab } from \"@material-ui/core/\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function Index() {\r\n  const [dataForm, setDataform] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    status: \"\",\r\n    wish_salary: \"\",\r\n    functional_title: \"\",\r\n    title: \"\",\r\n    seniority: \"\",\r\n    industry: \"\",\r\n    location: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    company: \"\",\r\n    status_process: \"\",\r\n    relocation: \"\",\r\n    registered_by: 1,\r\n  });\r\n\r\n  const [places, setPlaces] = useState({});\r\n\r\n  const handleInputChange = (event) => {\r\n    setDataform({\r\n      ...dataForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const searchPlaceMapbox = (event) => {\r\n    if (event.target.value.length > 3) {\r\n      fetch(\r\n        \"https://api.mapbox.com/geocoding/v5/mapbox.places/\" +\r\n          event.target.value +\r\n          \".json?limit=5&access_token=pk.eyJ1IjoiZXRvbGVkbyIsImEiOiJja2tlOGdnOW0wNGZpMnZxdHNuZHN2aTBxIn0.8Ks9ntap65z15hF-Xr2b1Q\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => setPlaces(data.features));\r\n    } else {\r\n      setPlaces({});\r\n    }\r\n  };\r\n\r\n  const sendData = () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataForm),\r\n    };\r\n    fetch(\"http://127.0.0.1:3333/candidates\", requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Not 2xx response\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => console.log(data))\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container fixed maxWidth=\"md\">\r\n      <Typography variant=\"h4\" color=\"initial\">\r\n        New Talent\r\n      </Typography>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={3} spacing={2}>\r\n          <Button variant=\"text\" color=\"default\">\r\n            Save as draft\r\n          </Button>\r\n          <br></br>\r\n          <Button variant=\"text\" color=\"default\" onClick={sendData}>\r\n            Save and send\r\n          </Button>\r\n          <br></br>\r\n          <Button variant=\"text\" color=\"default\">\r\n            Discard\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={9} spacing={2}>\r\n          <Tabs>\r\n            <Tab label=\"Profile\" />\r\n            <Tab label=\"Resume\" disabled />\r\n            <Tab label=\"Social Profiles\" disabled />\r\n          </Tabs>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"first_name\"\r\n              />\r\n              <TextField\r\n                label=\"Wish Slary\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"wish_salary\"\r\n              />\r\n              <TextField\r\n                label=\"Seniority\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"seniority\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n              <TextField\r\n                label=\"Phone\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"phone\"\r\n              />\r\n\r\n              <TextField\r\n                label=\"Status of process\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"status_process\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={4} space={2}>\r\n              <TextField\r\n                label=\"Last Name\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"last_name\"\r\n              />\r\n              <TextField\r\n                label=\"Functional Title\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"functional_title\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n              <TextField\r\n                label=\"Industry\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"industry\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n              <TextField\r\n                label=\"Email\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"email\"\r\n              />\r\n              <TextField\r\n                label=\"Relocation\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"relocation\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={4} space={2}>\r\n              <TextField\r\n                label=\"Status\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"status\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n              <TextField\r\n                label=\"Title\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n              />\r\n              <TextField\r\n                label=\"Location\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                onChange={searchPlaceMapbox}\r\n                name=\"places\"\r\n              />\r\n              {places.length > 0 ? (\r\n                <TextField\r\n                  label=\"Places\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  select\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  onChange={handleInputChange}\r\n                  name=\"location\"\r\n                >\r\n                  <option value=\"\">Select location by list place</option>\r\n                  {places.map((place) => {\r\n                    const placeString = {\r\n                      name: place.place_name,\r\n                      latlng: place.center,\r\n                    };\r\n                    return (\r\n                      <option value={JSON.stringify(placeString)}>\r\n                        {place.place_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </TextField>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <TextField\r\n                label=\"Company\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                onChange={handleInputChange}\r\n                name=\"company\"\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Value A\">Value A</option>\r\n                <option value=\"Value B\">Value B</option>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":15,"column":22,"nodeType":"83","messageId":"84","endLine":15,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":42,"column":1,"nodeType":"88","endLine":42,"endColumn":75},{"ruleId":"89","severity":1,"message":"90","line":39,"column":5,"nodeType":"91","messageId":"92","endLine":39,"endColumn":9},{"ruleId":"93","severity":1,"message":"94","line":106,"column":19,"nodeType":"95","endLine":106,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":32,"column":9,"nodeType":"95","endLine":32,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":32,"column":31,"nodeType":"95","endLine":32,"endColumn":42},{"ruleId":"96","severity":1,"message":"97","line":32,"column":58,"nodeType":"95","endLine":32,"endColumn":69},{"ruleId":"96","severity":1,"message":"97","line":33,"column":11,"nodeType":"95","endLine":33,"endColumn":22},{"ruleId":"77","replacedBy":"98"},{"ruleId":"79","replacedBy":"99"},{"ruleId":"81","severity":1,"message":"100","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":47,"column":17,"nodeType":"95","endLine":47,"endColumn":76},{"ruleId":"101","severity":1,"message":"102","line":59,"column":7,"nodeType":"103","endLine":59,"endColumn":48},{"ruleId":"81","severity":1,"message":"104","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'pageRender' is assigned a value but never used.","Identifier","unusedVar","'setPageRender' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'font'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["105"],["106"],"'Grid' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]